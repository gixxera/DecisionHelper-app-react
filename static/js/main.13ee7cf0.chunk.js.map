{"version":3,"sources":["components/AddOption.js","components/EditOption.js","components/Option.js","components/Options.js","components/Action.js","components/Header.js","components/Modal.js","components/SearchOption.js","App.js","serviceWorker.js","index.js"],"names":["AddOption","props","error","className","onSubmit","handleAddOption","type","name","placeholder","EditOption","onChange","setText","optionText","Option","useState","state","setState","newText","setNewText","e","target","value","count","onClick","handleDeleteOption","handleEditOption","Options","handleDeleteOptions","options","length","filteredOptions","map","option","index","key","Action","disabled","hasOptions","handlePick","Header","title","subtitle","defaultProps","OptionModal","closeTimeoutMS","onRequestClose","handleClearOption","ariaHideApp","isOpen","selectedOption","contentLabel","SearchOption","handleFilterOptions","App","undefined","input","filters","filter","toLowerCase","includes","optionToRemove","prevState","randomIndex","Math","floor","random","preventDefault","trim","focus","indexOf","concat","optionToEdit","optionIndex","findIndex","copyState","console","log","json","localStorage","getItem","JSON","parse","this","stringify","setItem","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13ee7cf0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst AddOption = (props) => (\r\n      <div>\r\n        {props.error && <p className=\"info-paragraph\">{props.error}</p>}\r\n        <form className=\"add-option\" onSubmit={props.handleAddOption}>\r\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" placeholder=\"Add option\" />\r\n          <button className=\"btn\">Add Option</button>\r\n        </form>\r\n      </div>\r\n    );\r\n\r\nexport default AddOption;","import React from 'react';\r\n\r\nconst EditOption = (props) => (\r\n    <div>\r\n      <input className=\"edit-option_input\" onChange={props.setText} placeholder={props.optionText} type=\"text\" />\r\n    </div>\r\n  );\r\n\r\nexport default EditOption;","import React, {useState} from 'react';\r\nimport EditOption from './EditOption';\r\n\r\nconst Option = (props) => {\r\n  let [state, setState] = useState(false);\r\n  let [newText, setNewText] = useState(props.optionText);\r\n\r\n  const setText = (e) => {\r\n    setNewText(newText = e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"option\">\r\n      {state ? <EditOption optionText={props.optionText} setText={setText} /> : <p>{props.count}. {props.optionText}</p>}\r\n      <div>\r\n      <button className=\"btn-big btn btn--link\" onClick={(e) => {\r\n        props.handleDeleteOption(props.optionText);\r\n      }}>X</button>\r\n      <button onClick={() => {\r\n        setState(state = !state);\r\n        if(!state){\r\n        props.handleEditOption(props.optionText, newText);\r\n      }\r\n      }} className=\"btn-big btn btn--link\">{state ? 'Submit' : 'Edit'}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Option;","import React from 'react';\r\nimport Option from './Option';\r\n\r\nconst Options = (props) => (\r\n  <div>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">Your Options</h3>\r\n      <button className=\"btn btn--link\" onClick={props.handleDeleteOptions}>Remove All</button>\r\n    </div>\r\n    {props.options.length === 0 && <p className=\"info-paragraph\">Please add an option</p>}\r\n    {\r\n      props.filteredOptions.length === 0 ? props.options.map((option, index) => <Option handleEditOption={props.handleEditOption} count={index + 1} key={option} optionText={option} handleDeleteOption={props.handleDeleteOption} />) : props.filteredOptions.map((option, index) => <Option handleEditOption={props.handleEditOption} count={index + 1} key={option} optionText={option} handleDeleteOption={props.handleDeleteOption} />)\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default Options;","import React from 'react';\r\n\r\nconst Action = (props) => (\r\n  <div>\r\n    <button className=\"button\" disabled={!props.hasOptions} onClick={props.handlePick}>Randomly Decide!</button>\r\n  </div>\r\n);\r\n\r\nexport default Action;","import React from 'react';\r\n\r\nconst Header = (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"wrapper\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nHeader.defaultProps = {\r\n  title: 'Decision Helper'\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst OptionModal = (props) => (\r\n  <Modal className=\"modal\" closeTimeoutMS={200} onRequestClose={props.handleClearOption} ariaHideApp={false} isOpen={!!props.selectedOption} contentLabel=\"Selected Option\">\r\n    <h3 className=\"modal__title\">Selected Option</h3>\r\n    {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\r\n    <button className=\"btn\" onClick={props.handleClearOption}>Cancel</button>\r\n  </Modal>\r\n);\r\n\r\nexport default OptionModal;","import React from 'react';\r\n\r\nconst SearchOption = (props) => (\r\n  <div>\r\n    <input className=\"filter-option\" onChange={props.handleFilterOptions} type=\"text\" placeholder=\"Seach option\" />\r\n  </div>\r\n);\r\n\r\nexport default SearchOption;","import React from 'react';\nimport './App.scss';\nimport AddOption from './components/AddOption';\nimport Options from './components/Options';\nimport Action from './components/Action';\nimport Header from './components/Header';\nimport OptionModal from './components/Modal';\nimport SearchOption from './components/SearchOption';\n\nclass App extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined,\n    filteredOptions: [],\n    error: undefined\n  };\n\n  handleFilterOptions = (e) => {\n    let input = e.target.value;\n    let filters = [];\n    if (input !== '') {\n      filters = this.state.options.filter((option) => option.toLowerCase().includes(input.toLowerCase()));\n    }\n    this.setState(() => ({ filteredOptions: filters }));\n  }\n\n  handleClearOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  }\n\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  }\n\n  handleDeleteOption = (optionToRemove) => {\n    this.setState((prevState) => ({\n      options: prevState.options.filter((option) => optionToRemove !== option)\n    }));\n  }\n\n  handlePick = () => {\n    const randomIndex = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomIndex]\n    this.setState(() => ({ selectedOption: option }));\n  }\n\n  handleAddOption = (e) => {\n    e.preventDefault();\n    const option = e.target.option.value.trim();\n    e.target.option.focus();\n\n    if (!option) {\n      return this.setState(() => ({error: 'You need to provide an option'}));\n    } else if (this.state.options.indexOf(option) > -1) {\n      return this.setState(() => ({error: 'This option already exists'}));\n    }\n\n    this.setState((prevState) => ({ options: prevState.options.concat([option]), error: undefined }));\n\n    if (!this.state.error) {\n      e.target.option.value = '';\n    }\n  }\n\n  handleEditOption = (optionToEdit, newText) => {\n    let optionIndex = this.state.options.findIndex((option) => option === optionToEdit);\n    let copyState = [...this.state.options];\n    copyState[optionIndex] = newText;\n    this.setState({options: copyState});\n    console.log(copyState);\n    console.log(this.state.options);\n  } \n\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('options');\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n\n    }\n  }\n\n  componentDidUpdate() {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem('options', json);\n  }\n\n  render() {\n    const subtitle = 'Make your decision easier';\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <div className=\"wrapper\">\n          <Action handlePick={this.handlePick} hasOptions={this.state.options.length > 0} />\n          <SearchOption handleFilterOptions={this.handleFilterOptions} />\n          <div className=\"widget\">\n            <Options handleEditOption={this.handleEditOption} handleDeleteOption={this.handleDeleteOption} handleDeleteOptions={this.handleDeleteOptions} options={this.state.options} filteredOptions={this.state.filteredOptions} />\n            <AddOption error={this.state.error} handleAddOption={this.handleAddOption} />\n          </div>\n        </div>\n        <OptionModal selectedOption={this.state.selectedOption} handleClearOption={this.handleClearOption} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}