{"version":3,"sources":["components/AddOption.js","components/Option.js","components/Options.js","components/Action.js","components/Header.js","components/Modal.js","components/SearchOption.js","App.js","serviceWorker.js","index.js"],"names":["AddOption","state","error","undefined","handleAddOption","e","preventDefault","option","target","value","trim","focus","props","setState","this","class","className","onSubmit","type","name","placeholder","React","Component","Option","count","optionText","onClick","handleDeleteOption","Options","handleDeleteOptions","options","length","filteredOptions","map","index","key","Action","disabled","hasOptions","handlePick","Header","title","subtitle","defaultProps","OptionModal","closeTimeoutMS","onRequestClose","handleClearOption","ariaHideApp","isOpen","selectedOption","contentLabel","SearchOption","onChange","handleFilterOptions","App","input","filters","filter","toLowerCase","includes","optionToRemove","prevState","randomIndex","Math","floor","random","indexOf","concat","json","localStorage","getItem","JSON","parse","prevProps","stringify","setItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b4a0153.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\n\r\nclass AddOption extends React.Component {\r\n  state = {\r\n    error: undefined\r\n  };\r\n\r\n  handleAddOption = (e) => {\r\n    e.preventDefault();\r\n    const option = e.target.option.value.trim();\r\n    e.target.option.focus();\r\n    const error = this.props.handleAddOption(option);\r\n\r\n    this.setState(() => ({ error }));\r\n\r\n    if (!error) {\r\n      e.target.option.value = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.error && <p class=\"info-paragraph\">{this.state.error}</p>}\r\n        <form className=\"add-option\" onSubmit={this.handleAddOption}>\r\n          <input className=\"add-option__input\" type=\"text\" name=\"option\" placeholder=\"Add option\" />\r\n          <button className=\"btn\">Add Option</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOption;","import React from 'react';\r\n\r\nconst Option = (props) => (\r\n  <div className=\"option\">\r\n    <p>{props.count}. {props.optionText}</p>\r\n    <button className=\"btn-big btn btn--link\" onClick={(e) => {\r\n      props.handleDeleteOption(props.optionText);\r\n    }}>X</button>\r\n  </div>\r\n);\r\n\r\nexport default Option;","import React from 'react';\r\nimport Option from './Option';\r\n\r\nconst Options = (props) => (\r\n  <div>\r\n    <div className=\"widget-header\">\r\n      <h3 className=\"widget-header__title\">Your Options</h3>\r\n      <button className=\"btn btn--link\" onClick={props.handleDeleteOptions}>Remove All</button>\r\n    </div>\r\n    {props.options.length === 0 && <p className=\"info-paragraph\">Please add an option</p>}\r\n    {\r\n      props.filteredOptions.length === 0 ? props.options.map((option, index) => <Option count={index + 1} key={option} optionText={option} handleDeleteOption={props.handleDeleteOption} />) : props.filteredOptions.map((option, index) => <Option count={index + 1} key={option} optionText={option} handleDeleteOption={props.handleDeleteOption} />)\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default Options;","import React from 'react';\r\n\r\nconst Action = (props) => (\r\n  <div>\r\n    <button className=\"button\" disabled={!props.hasOptions} onClick={props.handlePick}>Randomly Decide!</button>\r\n  </div>\r\n);\r\n\r\nexport default Action;","import React from 'react';\r\n\r\nconst Header = (props) => (\r\n  <div className=\"header\">\r\n    <div className=\"wrapper\">\r\n      <h1 className=\"header__title\">{props.title}</h1>\r\n      {props.subtitle && <h2 className=\"header__subtitle\">{props.subtitle}</h2>}\r\n    </div>\r\n  </div>\r\n);\r\n\r\n\r\nHeader.defaultProps = {\r\n  title: 'Decision Helper'\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Modal from 'react-modal';\r\n\r\nconst OptionModal = (props) => (\r\n  <Modal className=\"modal\" closeTimeoutMS={200} onRequestClose={props.handleClearOption} ariaHideApp={false} isOpen={!!props.selectedOption} contentLabel=\"Selected Option\">\r\n    <h3 className=\"modal__title\">Selected Option</h3>\r\n    {props.selectedOption && <p className=\"modal__body\">{props.selectedOption}</p>}\r\n    <button className=\"btn\" onClick={props.handleClearOption}>Cancel</button>\r\n  </Modal>\r\n);\r\n\r\nexport default OptionModal;","import React from 'react';\r\n\r\nconst SearchOption = (props) => (\r\n  <div>\r\n    <input className=\"filter-option\" onChange={props.handleFilterOptions} type=\"text\" placeholder=\"Seach option\" />\r\n  </div>\r\n);\r\n\r\nexport default SearchOption;","import React from 'react';\nimport './App.scss';\nimport AddOption from './components/AddOption';\nimport Options from './components/Options';\nimport Action from './components/Action';\nimport Header from './components/Header';\nimport OptionModal from './components/Modal';\nimport SearchOption from './components/SearchOption';\n\nclass App extends React.Component {\n  state = {\n    options: [],\n    selectedOption: undefined,\n    filteredOptions: []\n  };\n\n  handleFilterOptions = (e) => {\n    let input = e.target.value;\n    let filters = [];\n    if (input !== '') {\n      filters = this.state.options.filter((option) => option.toLowerCase().includes(input.toLowerCase()));\n    }\n    this.setState(() => ({ filteredOptions: filters }));\n  }\n\n  handleClearOption = () => {\n    this.setState(() => ({ selectedOption: undefined }));\n  }\n\n  handleDeleteOptions = () => {\n    this.setState(() => ({ options: [] }));\n  }\n\n  handleDeleteOption = (optionToRemove) => {\n    this.setState((prevState) => ({\n      options: prevState.options.filter((option) => optionToRemove !== option)\n    }));\n  }\n\n  handlePick = () => {\n    const randomIndex = Math.floor(Math.random() * this.state.options.length);\n    const option = this.state.options[randomIndex]\n    this.setState(() => ({ selectedOption: option }));\n  }\n\n  handleAddOption = (option) => {\n    if (!option) {\n      return 'You need to provide an option'\n    } else if (this.state.options.indexOf(option) > -1) {\n      return 'This option already exists'\n    }\n\n    this.setState((prevState) => ({ options: prevState.options.concat([option]) }));\n  }\n\n  componentDidMount() {\n    try {\n      const json = localStorage.getItem('options');\n      const options = JSON.parse(json);\n\n      if (options) {\n        this.setState(() => ({ options }));\n      }\n    } catch (e) {\n\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.options.length !== this.state.options.length) {\n      const json = JSON.stringify(this.state.options);\n      localStorage.setItem('options', json);\n    }\n  }\n\n  render() {\n    const subtitle = 'Make your decision easier';\n\n    return (\n      <div>\n        <Header subtitle={subtitle} />\n        <div className=\"wrapper\">\n          <Action handlePick={this.handlePick} hasOptions={this.state.options.length > 0} />\n          <SearchOption handleFilterOptions={this.handleFilterOptions} />\n          <div className=\"widget\">\n            <Options handleDeleteOption={this.handleDeleteOption} handleDeleteOptions={this.handleDeleteOptions} options={this.state.options} filteredOptions={this.state.filteredOptions} />\n            <AddOption handleAddOption={this.handleAddOption} />\n          </div>\n        </div>\n        <OptionModal selectedOption={this.state.selectedOption} handleClearOption={this.handleClearOption} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}